{
  "api/Platform.Data.Exceptions.ArgumentLinkDoesNotExistsException-1.html": {
    "href": "api/Platform.Data.Exceptions.ArgumentLinkDoesNotExistsException-1.html",
    "title": "Class ArgumentLinkDoesNotExistsException<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Class ArgumentLinkDoesNotExistsException<TLinkAddress> Represents the argument link does not exists exception. Inheritance Object Exception SystemException ArgumentException ArgumentLinkDoesNotExistsException<TLinkAddress> Implements ISerializable Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Exceptions Assembly : Platform.Data.dll Syntax public class ArgumentLinkDoesNotExistsException<TLinkAddress> : ArgumentException, ISerializable Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source ArgumentLinkDoesNotExistsException() Initializes a new instance. Declaration public ArgumentLinkDoesNotExistsException() | Improve this Doc View Source ArgumentLinkDoesNotExistsException(TLinkAddress) Initializes a new instance. Declaration public ArgumentLinkDoesNotExistsException(TLinkAddress link) Parameters Type Name Description TLinkAddress link A link. | Improve this Doc View Source ArgumentLinkDoesNotExistsException(TLinkAddress, String) Initializes a new instance. Declaration public ArgumentLinkDoesNotExistsException(TLinkAddress link, string argumentName) Parameters Type Name Description TLinkAddress link A link. String argumentName A argument name. | Improve this Doc View Source ArgumentLinkDoesNotExistsException(String) Initializes a new instance. Declaration public ArgumentLinkDoesNotExistsException(string message) Parameters Type Name Description String message A message. | Improve this Doc View Source ArgumentLinkDoesNotExistsException(String, Exception) Initializes a new instance. Declaration public ArgumentLinkDoesNotExistsException(string message, Exception innerException) Parameters Type Name Description String message A message. Exception innerException A inner exception. Implements System.Runtime.Serialization.ISerializable See Also ArgumentException"
  },
  "api/Platform.Data.Exceptions.ArgumentLinkHasDependenciesException-1.html": {
    "href": "api/Platform.Data.Exceptions.ArgumentLinkHasDependenciesException-1.html",
    "title": "Class ArgumentLinkHasDependenciesException<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Class ArgumentLinkHasDependenciesException<TLinkAddress> Represents the argument link has dependencies exception. Inheritance Object Exception SystemException ArgumentException ArgumentLinkHasDependenciesException<TLinkAddress> Implements ISerializable Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Exceptions Assembly : Platform.Data.dll Syntax public class ArgumentLinkHasDependenciesException<TLinkAddress> : ArgumentException, ISerializable Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source ArgumentLinkHasDependenciesException() Initializes a new instance. Declaration public ArgumentLinkHasDependenciesException() | Improve this Doc View Source ArgumentLinkHasDependenciesException(TLinkAddress) Initializes a new instance. Declaration public ArgumentLinkHasDependenciesException(TLinkAddress link) Parameters Type Name Description TLinkAddress link A link. | Improve this Doc View Source ArgumentLinkHasDependenciesException(TLinkAddress, String) Initializes a new instance. Declaration public ArgumentLinkHasDependenciesException(TLinkAddress link, string paramName) Parameters Type Name Description TLinkAddress link A link. String paramName A param name. | Improve this Doc View Source ArgumentLinkHasDependenciesException(String) Initializes a new instance. Declaration public ArgumentLinkHasDependenciesException(string message) Parameters Type Name Description String message A message. | Improve this Doc View Source ArgumentLinkHasDependenciesException(String, Exception) Initializes a new instance. Declaration public ArgumentLinkHasDependenciesException(string message, Exception innerException) Parameters Type Name Description String message A message. Exception innerException A inner exception. Implements System.Runtime.Serialization.ISerializable See Also ArgumentException"
  },
  "api/Platform.Data.Exceptions.html": {
    "href": "api/Platform.Data.Exceptions.html",
    "title": "Namespace Platform.Data.Exceptions | LinksPlatform's Platform.Data Library",
    "keywords": "Namespace Platform.Data.Exceptions Classes ArgumentLinkDoesNotExistsException<TLinkAddress> Represents the argument link does not exists exception. ArgumentLinkHasDependenciesException<TLinkAddress> Represents the argument link has dependencies exception. LinksLimitReachedException<TLinkAddress> Represents the links limit reached exception. LinksLimitReachedExceptionBase Represents the links limit reached exception base. LinkWithSameValueAlreadyExistsException Represents the link with same value already exists exception."
  },
  "api/Platform.Data.Exceptions.LinksLimitReachedException-1.html": {
    "href": "api/Platform.Data.Exceptions.LinksLimitReachedException-1.html",
    "title": "Class LinksLimitReachedException<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinksLimitReachedException<TLinkAddress> Represents the links limit reached exception. Inheritance Object Exception LinksLimitReachedExceptionBase LinksLimitReachedException<TLinkAddress> Implements ISerializable Inherited Members LinksLimitReachedExceptionBase.DefaultMessage Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Exceptions Assembly : Platform.Data.dll Syntax public class LinksLimitReachedException<TLinkAddress> : LinksLimitReachedExceptionBase, ISerializable Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksLimitReachedException() Initializes a new instance. Declaration public LinksLimitReachedException() | Improve this Doc View Source LinksLimitReachedException(TLinkAddress) Initializes a new instance. Declaration public LinksLimitReachedException(TLinkAddress limit) Parameters Type Name Description TLinkAddress limit A limit. | Improve this Doc View Source LinksLimitReachedException(String) Initializes a new instance. Declaration public LinksLimitReachedException(string message) Parameters Type Name Description String message A message. | Improve this Doc View Source LinksLimitReachedException(String, Exception) Initializes a new instance. Declaration public LinksLimitReachedException(string message, Exception innerException) Parameters Type Name Description String message A message. Exception innerException A inner exception. Implements System.Runtime.Serialization.ISerializable See Also LinksLimitReachedExceptionBase"
  },
  "api/Platform.Data.Exceptions.LinksLimitReachedExceptionBase.html": {
    "href": "api/Platform.Data.Exceptions.LinksLimitReachedExceptionBase.html",
    "title": "Class LinksLimitReachedExceptionBase | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinksLimitReachedExceptionBase Represents the links limit reached exception base. Inheritance Object Exception LinksLimitReachedExceptionBase LinksLimitReachedException<TLinkAddress> Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Exceptions Assembly : Platform.Data.dll Syntax public abstract class LinksLimitReachedExceptionBase : Exception, ISerializable Constructors | Improve this Doc View Source LinksLimitReachedExceptionBase(String) Initializes a new LinksLimitReachedExceptionBase instance. Declaration protected LinksLimitReachedExceptionBase(string message) Parameters Type Name Description String message A message. | Improve this Doc View Source LinksLimitReachedExceptionBase(String, Exception) Initializes a new LinksLimitReachedExceptionBase instance. Declaration protected LinksLimitReachedExceptionBase(string message, Exception innerException) Parameters Type Name Description String message A message. Exception innerException A inner exception. Fields | Improve this Doc View Source DefaultMessage The default message. Declaration public static readonly string DefaultMessage Field Value Type Description String Implements System.Runtime.Serialization.ISerializable See Also Exception"
  },
  "api/Platform.Data.Exceptions.LinkWithSameValueAlreadyExistsException.html": {
    "href": "api/Platform.Data.Exceptions.LinkWithSameValueAlreadyExistsException.html",
    "title": "Class LinkWithSameValueAlreadyExistsException | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinkWithSameValueAlreadyExistsException Represents the link with same value already exists exception. Inheritance Object Exception LinkWithSameValueAlreadyExistsException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Exceptions Assembly : Platform.Data.dll Syntax public class LinkWithSameValueAlreadyExistsException : Exception, ISerializable Constructors | Improve this Doc View Source LinkWithSameValueAlreadyExistsException() Initializes a new LinkWithSameValueAlreadyExistsException instance. Declaration public LinkWithSameValueAlreadyExistsException() | Improve this Doc View Source LinkWithSameValueAlreadyExistsException(String) Initializes a new LinkWithSameValueAlreadyExistsException instance. Declaration public LinkWithSameValueAlreadyExistsException(string message) Parameters Type Name Description String message A message. | Improve this Doc View Source LinkWithSameValueAlreadyExistsException(String, Exception) Initializes a new LinkWithSameValueAlreadyExistsException instance. Declaration public LinkWithSameValueAlreadyExistsException(string message, Exception innerException) Parameters Type Name Description String message A message. Exception innerException A inner exception. Fields | Improve this Doc View Source DefaultMessage The default message. Declaration public static readonly string DefaultMessage Field Value Type Description String Implements System.Runtime.Serialization.ISerializable See Also Exception"
  },
  "api/Platform.Data.html": {
    "href": "api/Platform.Data.html",
    "title": "Namespace Platform.Data | LinksPlatform's Platform.Data Library",
    "keywords": "Namespace Platform.Data Classes ILinksExtensions Represents the links extensions. LinkAddress<TLinkAddress> Represents the link address. LinksConstants<TLinkAddress> Represents the links constants. LinksConstantsBase Represents the links constants base. LinksConstantsExtensions Represents the links constants extensions. Point<TLinkAddress> Represents the point. Structs Hybrid<TLinkAddress> The hybrid. Interfaces ILinks<TLinkAddress, TConstants> Represents an interface for manipulating data in the Links (links storage) format. Представляет интерфейс для манипуляции с данными в формате Links (хранилища связей). ISynchronizedLinks<TLinkAddress, TLinks, TConstants> Defines the synchronized links."
  },
  "api/Platform.Data.Hybrid-1.html": {
    "href": "api/Platform.Data.Hybrid-1.html",
    "title": "Struct Hybrid<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Struct Hybrid<TLinkAddress> The hybrid. Implements IEquatable < Hybrid <TLinkAddress>> Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public struct Hybrid<TLinkAddress> : IEquatable<Hybrid<TLinkAddress>> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source Hybrid(TLinkAddress) Initializes a new instance. Declaration public Hybrid(TLinkAddress value) Parameters Type Name Description TLinkAddress value A value. | Improve this Doc View Source Hybrid(TLinkAddress, Boolean) Initializes a new instance. Declaration public Hybrid(TLinkAddress value, bool isExternal) Parameters Type Name Description TLinkAddress value A value. Boolean isExternal A is external. | Improve this Doc View Source Hybrid(Object) Initializes a new instance. Declaration public Hybrid(object value) Parameters Type Name Description Object value A value. | Improve this Doc View Source Hybrid(Object, Boolean) Initializes a new instance. Declaration public Hybrid(object value, bool isExternal) Parameters Type Name Description Object value A value. Boolean isExternal A is external. Fields | Improve this Doc View Source ExternalZero The half of number values range. Declaration public static readonly TLinkAddress ExternalZero Field Value Type Description TLinkAddress | Improve this Doc View Source HalfOfNumberValuesRange The max value. Declaration public static readonly ulong HalfOfNumberValuesRange Field Value Type Description UInt64 | Improve this Doc View Source Value The value. Declaration public readonly TLinkAddress Value Field Value Type Description TLinkAddress Properties | Improve this Doc View Source AbsoluteValue Gets the absolute value value. Declaration public long AbsoluteValue { get; } Property Value Type Description Int64 | Improve this Doc View Source IsExternal Gets the is external value. Declaration public bool IsExternal { get; } Property Value Type Description Boolean | Improve this Doc View Source IsInternal Gets the is internal value. Declaration public bool IsInternal { get; } Property Value Type Description Boolean | Improve this Doc View Source IsNothing Gets the is nothing value. Declaration public bool IsNothing { get; } Property Value Type Description Boolean | Improve this Doc View Source SignedValue Gets the signed value value. Declaration public long SignedValue { get; } Property Value Type Description Int64 Methods | Improve this Doc View Source Equals(Hybrid<TLinkAddress>) Determines whether this instance equals. Declaration public bool Equals(Hybrid<TLinkAddress> other) Parameters Type Name Description Hybrid <TLinkAddress> other The other. Returns Type Description Boolean The bool | Improve this Doc View Source Equals(Object) Determines whether this instance equals. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description Boolean The bool Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The int Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Returns the string. Declaration public override string ToString() Returns Type Description String The string Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(Hybrid<TLinkAddress>, Hybrid<TLinkAddress>) Declaration public static bool operator ==(Hybrid<TLinkAddress> left, Hybrid<TLinkAddress> right) Parameters Type Name Description Hybrid <TLinkAddress> left Hybrid <TLinkAddress> right Returns Type Description Boolean | Improve this Doc View Source Explicit(Hybrid<TLinkAddress> to Byte) Declaration public static explicit operator byte (Hybrid<TLinkAddress> hybrid) Parameters Type Name Description Hybrid <TLinkAddress> hybrid Returns Type Description Byte | Improve this Doc View Source Explicit(Hybrid<TLinkAddress> to Int16) Declaration public static explicit operator short (Hybrid<TLinkAddress> hybrid) Parameters Type Name Description Hybrid <TLinkAddress> hybrid Returns Type Description Int16 | Improve this Doc View Source Explicit(Hybrid<TLinkAddress> to Int32) Declaration public static explicit operator int (Hybrid<TLinkAddress> hybrid) Parameters Type Name Description Hybrid <TLinkAddress> hybrid Returns Type Description Int32 | Improve this Doc View Source Explicit(Hybrid<TLinkAddress> to Int64) Declaration public static explicit operator long (Hybrid<TLinkAddress> hybrid) Parameters Type Name Description Hybrid <TLinkAddress> hybrid Returns Type Description Int64 | Improve this Doc View Source Explicit(Hybrid<TLinkAddress> to SByte) Declaration public static explicit operator sbyte (Hybrid<TLinkAddress> hybrid) Parameters Type Name Description Hybrid <TLinkAddress> hybrid Returns Type Description SByte | Improve this Doc View Source Explicit(Hybrid<TLinkAddress> to UInt16) Declaration public static explicit operator ushort (Hybrid<TLinkAddress> hybrid) Parameters Type Name Description Hybrid <TLinkAddress> hybrid Returns Type Description UInt16 | Improve this Doc View Source Explicit(Hybrid<TLinkAddress> to UInt32) Declaration public static explicit operator uint (Hybrid<TLinkAddress> hybrid) Parameters Type Name Description Hybrid <TLinkAddress> hybrid Returns Type Description UInt32 | Improve this Doc View Source Explicit(Hybrid<TLinkAddress> to UInt64) Declaration public static explicit operator ulong (Hybrid<TLinkAddress> hybrid) Parameters Type Name Description Hybrid <TLinkAddress> hybrid Returns Type Description UInt64 | Improve this Doc View Source Explicit(Byte to Hybrid<TLinkAddress>) Declaration public static explicit operator Hybrid<TLinkAddress>(byte integer) Parameters Type Name Description Byte integer Returns Type Description Hybrid <TLinkAddress> | Improve this Doc View Source Explicit(Int16 to Hybrid<TLinkAddress>) Declaration public static explicit operator Hybrid<TLinkAddress>(short integer) Parameters Type Name Description Int16 integer Returns Type Description Hybrid <TLinkAddress> | Improve this Doc View Source Explicit(Int32 to Hybrid<TLinkAddress>) Declaration public static explicit operator Hybrid<TLinkAddress>(int integer) Parameters Type Name Description Int32 integer Returns Type Description Hybrid <TLinkAddress> | Improve this Doc View Source Explicit(Int64 to Hybrid<TLinkAddress>) Declaration public static explicit operator Hybrid<TLinkAddress>(long integer) Parameters Type Name Description Int64 integer Returns Type Description Hybrid <TLinkAddress> | Improve this Doc View Source Explicit(SByte to Hybrid<TLinkAddress>) Declaration public static explicit operator Hybrid<TLinkAddress>(sbyte integer) Parameters Type Name Description SByte integer Returns Type Description Hybrid <TLinkAddress> | Improve this Doc View Source Explicit(UInt16 to Hybrid<TLinkAddress>) Declaration public static explicit operator Hybrid<TLinkAddress>(ushort integer) Parameters Type Name Description UInt16 integer Returns Type Description Hybrid <TLinkAddress> | Improve this Doc View Source Explicit(UInt32 to Hybrid<TLinkAddress>) Declaration public static explicit operator Hybrid<TLinkAddress>(uint integer) Parameters Type Name Description UInt32 integer Returns Type Description Hybrid <TLinkAddress> | Improve this Doc View Source Explicit(UInt64 to Hybrid<TLinkAddress>) Declaration public static explicit operator Hybrid<TLinkAddress>(ulong integer) Parameters Type Name Description UInt64 integer Returns Type Description Hybrid <TLinkAddress> | Improve this Doc View Source Implicit(TLinkAddress to Hybrid<TLinkAddress>) Declaration public static implicit operator Hybrid<TLinkAddress>(TLinkAddress integer) Parameters Type Name Description TLinkAddress integer Returns Type Description Hybrid <TLinkAddress> | Improve this Doc View Source Implicit(Hybrid<TLinkAddress> to TLinkAddress) Declaration public static implicit operator TLinkAddress(Hybrid<TLinkAddress> hybrid) Parameters Type Name Description Hybrid <TLinkAddress> hybrid Returns Type Description TLinkAddress | Improve this Doc View Source Inequality(Hybrid<TLinkAddress>, Hybrid<TLinkAddress>) Declaration public static bool operator !=(Hybrid<TLinkAddress> left, Hybrid<TLinkAddress> right) Parameters Type Name Description Hybrid <TLinkAddress> left Hybrid <TLinkAddress> right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Platform.Data.ILinks-2.html": {
    "href": "api/Platform.Data.ILinks-2.html",
    "title": "Interface ILinks<TLinkAddress, TConstants> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ILinks<TLinkAddress, TConstants> Represents an interface for manipulating data in the Links (links storage) format. Представляет интерфейс для манипуляции с данными в формате Links (хранилища связей). Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public interface ILinks<TLinkAddress, TConstants> where TConstants : LinksConstants<TLinkAddress> Type Parameters Name Description TLinkAddress TConstants Remarks This interface is independent of the size of the content of the link, meaning it is suitable for both doublets, triplets, and link sequences of any size. Этот интерфейс не зависит от размера содержимого связи, а значит подходит как для дуплетов, триплетов и последовательностей связей любого размера. Properties | Improve this Doc View Source Constants Returns the set of constants that is necessary for effective communication with the methods of this interface. Возвращает набор констант, который необходим для эффективной коммуникации с методами этого интерфейса. Declaration TConstants Constants { get; } Property Value Type Description TConstants Remarks These constants are not changed since the creation of the links storage access point. Эти константы не меняются с момента создания точки доступа к хранилищу связей. Methods | Improve this Doc View Source Count(IList<TLinkAddress>) Counts and returns the total number of links in the storage that meet the specified restriction. Подсчитывает и возвращает общее число связей находящихся в хранилище, соответствующих указанному ограничению. Declaration TLinkAddress Count(IList<TLinkAddress> restriction) Parameters Type Name Description IList <TLinkAddress> restriction Restriction on the contents of links. Ограничение на содержимое связей. Returns Type Description TLinkAddress The total number of links in the storage that meet the specified restriction. Общее число связей находящихся в хранилище, соответствующих указанному ограничению. | Improve this Doc View Source Create(IList<TLinkAddress>) Creates a link. Создаёт связь. The content of a new link. This argument is optional, if the null passed as value that means no content of a link is set. Содержимое новой связи. Этот аргумент опционален, если null передан в качестве значения это означает, что никакого содержимого для связи не установлено. Declaration TLinkAddress Create(IList<TLinkAddress> substitution) Parameters Type Name Description IList <TLinkAddress> substitution Returns Type Description TLinkAddress Index of the created link. Индекс созданной связи. | Improve this Doc View Source Delete(IList<TLinkAddress>) Deletes links that match the specified restriction. Удаляет связи соответствующие указанному ограничению. Restriction on the content of a link. This argument is optional, if the null passed as value that means no restriction on the content of a link are set. Ограничение на содержимое связи. Этот аргумент опционален, если null передан в качестве значения это означает, что никаких ограничений на содержимое связи не установлено. Declaration void Delete(IList<TLinkAddress> restriction) Parameters Type Name Description IList <TLinkAddress> restriction | Improve this Doc View Source Each(Func<IList<TLinkAddress>, TLinkAddress>, IList<TLinkAddress>) Passes through all the links matching the pattern, invoking a handler for each matching link. Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration TLinkAddress Each(Func<IList<TLinkAddress>, TLinkAddress> handler, IList<TLinkAddress> restriction) Parameters Type Name Description Func < IList <TLinkAddress>, TLinkAddress> handler A handler for each matching link. Обработчик для каждой подходящей связи. IList <TLinkAddress> restriction Restriction on the contents of links. Each constraint can have values: Constants.Null - the 0th link denoting a reference to the void, Any - the absence of a constraint, 1..∞ a specific link index. Ограничение на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Any - отсутствие ограничения, 1..∞ конкретный индекс связи. Returns Type Description TLinkAddress Constants.Continue, if the pass through the links was not interrupted, and Constants.Break otherwise. Constants.Continue, в случае если проход по связям не был прерван и Constants.Break в обратном случае. | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>) Обновляет связь с указанными restriction[Constants.IndexPart] в адресом связи на связь с указанным новым содержимым. Declaration TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution) Parameters Type Name Description IList <TLinkAddress> restriction Ограничение на содержимое связей. Предполагается, что будет указан индекс связи (в restriction[Constants.IndexPart]) и далее за ним будет следовать содержимое связи. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Constants.Itself - требование установить ссылку на себя, 1..∞ конкретный индекс другой связи. IList <TLinkAddress> substitution Returns Type Description TLinkAddress Индекс обновлённой связи. Extension Methods ILinksExtensions.Count<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress, String) ILinksExtensions.Each<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, Func<IList<TLinkAddress>, TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetLink<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) ILinksExtensions.IsFullPoint<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) ILinksExtensions.IsPartialPoint<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress)"
  },
  "api/Platform.Data.ILinksExtensions.html": {
    "href": "api/Platform.Data.ILinksExtensions.html",
    "title": "Class ILinksExtensions | LinksPlatform's Platform.Data Library",
    "keywords": "Class ILinksExtensions Represents the links extensions. Inheritance Object ILinksExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public static class ILinksExtensions Methods | Improve this Doc View Source Count<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress[]) Counts the links. Declaration public static TLinkAddress Count<TLinkAddress, TConstants>(this ILinks<TLinkAddress, TConstants> links, params TLinkAddress[] restrictions) where TConstants : LinksConstants<TLinkAddress> Parameters Type Name Description ILinks <TLinkAddress, TConstants> links The links. TLinkAddress[] restrictions The restrictions. Returns Type Description TLinkAddress The link address Type Parameters Name Description TLinkAddress The link address. TConstants The constants. | Improve this Doc View Source Each<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, Func<IList<TLinkAddress>, TLinkAddress>, TLinkAddress[]) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static TLinkAddress Each<TLinkAddress, TConstants>(this ILinks<TLinkAddress, TConstants> links, Func<IList<TLinkAddress>, TLinkAddress> handler, params TLinkAddress[] restrictions) where TConstants : LinksConstants<TLinkAddress> Parameters Type Name Description ILinks <TLinkAddress, TConstants> links Хранилище связей. Func < IList <TLinkAddress>, TLinkAddress> handler Обработчик каждой подходящей связи. TLinkAddress[] restrictions Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Any - отсутствие ограничения, 1..∞ конкретный индекс связи. Returns Type Description TLinkAddress True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLinkAddress TConstants | Improve this Doc View Source EnsureLinkExists<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) Declaration public static void EnsureLinkExists<TLinkAddress, TConstants>(this ILinks<TLinkAddress, TConstants> links, TLinkAddress link) where TConstants : LinksConstants<TLinkAddress> Parameters Type Name Description ILinks <TLinkAddress, TConstants> links Хранилище связей. TLinkAddress link Индекс проверяемой на существование связи. Type Parameters Name Description TLinkAddress TConstants Remarks TODO: May be move to EnsureExtensions or make it both there and here | Improve this Doc View Source EnsureLinkExists<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress, String) Declaration public static void EnsureLinkExists<TLinkAddress, TConstants>(this ILinks<TLinkAddress, TConstants> links, TLinkAddress link, string argumentName) where TConstants : LinksConstants<TLinkAddress> Parameters Type Name Description ILinks <TLinkAddress, TConstants> links Хранилище связей. TLinkAddress link Индекс проверяемой на существование связи. String argumentName Имя аргумента, в который передаётся индекс связи. Type Parameters Name Description TLinkAddress TConstants | Improve this Doc View Source Exists<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) Возвращает значение, определяющее существует ли связь с указанным индексом в хранилище связей. Declaration public static bool Exists<TLinkAddress, TConstants>(this ILinks<TLinkAddress, TConstants> links, TLinkAddress link) where TConstants : LinksConstants<TLinkAddress> Parameters Type Name Description ILinks <TLinkAddress, TConstants> links Хранилище связей. TLinkAddress link Индекс проверяемой на существование связи. Returns Type Description Boolean Значение, определяющее существует ли связь. Type Parameters Name Description TLinkAddress TConstants | Improve this Doc View Source GetLink<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) Возвращает части-значения для связи с указанным индексом. Declaration public static IList<TLinkAddress> GetLink<TLinkAddress, TConstants>(this ILinks<TLinkAddress, TConstants> links, TLinkAddress link) where TConstants : LinksConstants<TLinkAddress> Parameters Type Name Description ILinks <TLinkAddress, TConstants> links Хранилище связей. TLinkAddress link Индекс связи. Returns Type Description IList <TLinkAddress> Уникальную связь. Type Parameters Name Description TLinkAddress TConstants | Improve this Doc View Source IsFullPoint<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) Возвращает значение, определяющее является ли связь с указанным индексом точкой полностью (связью замкнутой на себе дважды). Declaration public static bool IsFullPoint<TLinkAddress, TConstants>(this ILinks<TLinkAddress, TConstants> links, TLinkAddress link) where TConstants : LinksConstants<TLinkAddress> Parameters Type Name Description ILinks <TLinkAddress, TConstants> links Хранилище связей. TLinkAddress link Индекс проверяемой связи. Returns Type Description Boolean Значение, определяющее является ли связь точкой полностью. Type Parameters Name Description TLinkAddress TConstants Remarks Связь точка - это связь, у которой начало (Source) и конец (Target) есть сама эта связь. Но что, если точка уже есть, а нужно создать пару с таким же значением? Должны ли точка и пара существовать одновременно? Или в качестве решения для точек нужно использовать 0 в качестве начала и конца, а сортировать по индексу в массиве связей? Какое тогда будет значение Source и Target у точки? 0 или её индекс? Или точка должна быть одновременно точкой и парой, а также последовательностями из самой себя любого размера? Как только есть ссылка на себя, появляется этот парадокс, причём достаточно даже одной ссылки на себя (частичной точки). А что если не выбирать что является точкой, пара нулей (цикл через пустоту) или самостоятельный цикл через себя? Что если предоставить все варианты использования связей? Что если разрешить и нули, а так же частичные варианты? Что если точка, это только в том случае когда link.Source == link && link.Target == link , т.е. дважды ссылка на себя. А пара это тогда, когда link.Source == link.Target && link.Source != link , т.е. ссылка не на себя а во вне. Тогда если у нас уже создана пара, но нам нужна точка, мы можем используя промежуточную связь, например \"DoubletOf\" обозначить что является точно парой, а что точно точкой. И наоборот этот же метод поможет, если уже существует точка, но нам нужна пара. | Improve this Doc View Source IsPartialPoint<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) Возвращает значение, определяющее является ли связь с указанным индексом точкой частично (связью замкнутой на себе как минимум один раз). Declaration public static bool IsPartialPoint<TLinkAddress, TConstants>(this ILinks<TLinkAddress, TConstants> links, TLinkAddress link) where TConstants : LinksConstants<TLinkAddress> Parameters Type Name Description ILinks <TLinkAddress, TConstants> links Хранилище связей. TLinkAddress link Индекс проверяемой связи. Returns Type Description Boolean Значение, определяющее является ли связь точкой частично. Type Parameters Name Description TLinkAddress TConstants Remarks Достаточно любой одной ссылки на себя. Также в будущем можно будет проверять и всех родителей, чтобы проверить есть ли ссылки на себя (на эту связь)."
  },
  "api/Platform.Data.ISynchronizedLinks-3.html": {
    "href": "api/Platform.Data.ISynchronizedLinks-3.html",
    "title": "Interface ISynchronizedLinks<TLinkAddress, TLinks, TConstants> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ISynchronizedLinks<TLinkAddress, TLinks, TConstants> Defines the synchronized links. Inherited Members ILinks<TLinkAddress, TConstants>.Constants ILinks<TLinkAddress, TConstants>.Count(IList<TLinkAddress>) ILinks<TLinkAddress, TConstants>.Each(Func<IList<TLinkAddress>, TLinkAddress>, IList<TLinkAddress>) ILinks<TLinkAddress, TConstants>.Create(IList<TLinkAddress>) ILinks<TLinkAddress, TConstants>.Update(IList<TLinkAddress>, IList<TLinkAddress>) ILinks<TLinkAddress, TConstants>.Delete(IList<TLinkAddress>) Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public interface ISynchronizedLinks<TLinkAddress, TLinks, TConstants> : ISynchronized<TLinks>, ILinks<TLinkAddress, TConstants> where TLinks : ILinks<TLinkAddress, TConstants> where TConstants : LinksConstants<TLinkAddress> Type Parameters Name Description TLinkAddress TLinks TConstants Extension Methods ILinksExtensions.Count<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress, String) ILinksExtensions.Each<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, Func<IList<TLinkAddress>, TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetLink<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) ILinksExtensions.IsFullPoint<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) ILinksExtensions.IsPartialPoint<TLinkAddress, TConstants>(ILinks<TLinkAddress, TConstants>, TLinkAddress) See Also ILinks <TLinkAddress, TConstants>"
  },
  "api/Platform.Data.LinkAddress-1.html": {
    "href": "api/Platform.Data.LinkAddress-1.html",
    "title": "Class LinkAddress<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinkAddress<TLinkAddress> Represents the link address. Inheritance Object LinkAddress<TLinkAddress> Implements IEquatable < LinkAddress <TLinkAddress>> IList <TLinkAddress> ICollection <TLinkAddress> IEnumerable <TLinkAddress> IEnumerable Inherited Members Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public class LinkAddress<TLinkAddress> : IEquatable<LinkAddress<TLinkAddress>>, IList<TLinkAddress>, ICollection<TLinkAddress>, IEnumerable<TLinkAddress>, IEnumerable Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinkAddress(TLinkAddress) Initializes a new instance. Declaration public LinkAddress(TLinkAddress index) Parameters Type Name Description TLinkAddress index A index. Properties | Improve this Doc View Source Count Gets the count value. Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Index Gets the index value. Declaration public TLinkAddress Index { get; } Property Value Type Description TLinkAddress | Improve this Doc View Source IsReadOnly Gets the is read only value. Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] The not supported exception. Declaration public TLinkAddress this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description TLinkAddress Methods | Improve this Doc View Source Add(TLinkAddress) Adds the item. Declaration public void Add(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. | Improve this Doc View Source Clear() Clears this instance. Declaration public void Clear() | Improve this Doc View Source Contains(TLinkAddress) Determines whether this instance contains. Declaration public virtual bool Contains(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. Returns Type Description Boolean The bool | Improve this Doc View Source CopyTo(TLinkAddress[], Int32) Copies the to using the specified array. Declaration public void CopyTo(TLinkAddress[] array, int arrayIndex) Parameters Type Name Description TLinkAddress[] array The array. Int32 arrayIndex The array index. | Improve this Doc View Source Equals(LinkAddress<TLinkAddress>) Determines whether this instance equals. Declaration public virtual bool Equals(LinkAddress<TLinkAddress> other) Parameters Type Name Description LinkAddress <TLinkAddress> other The other. Returns Type Description Boolean The bool | Improve this Doc View Source Equals(Object) Determines whether this instance equals. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description Boolean The bool Overrides Object.Equals(Object) | Improve this Doc View Source GetEnumerator() Gets the enumerator. Declaration public IEnumerator<TLinkAddress> GetEnumerator() Returns Type Description IEnumerator <TLinkAddress> An enumerator of t link address | Improve this Doc View Source GetHashCode() Gets the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The int Overrides Object.GetHashCode() | Improve this Doc View Source IndexOf(TLinkAddress) Indexes the of using the specified item. Declaration public virtual int IndexOf(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. Returns Type Description Int32 The int | Improve this Doc View Source Insert(Int32, TLinkAddress) Inserts the index. Declaration public void Insert(int index, TLinkAddress item) Parameters Type Name Description Int32 index The index. TLinkAddress item The item. | Improve this Doc View Source Remove(TLinkAddress) Determines whether this instance remove. Declaration public bool Remove(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. Returns Type Description Boolean The bool | Improve this Doc View Source RemoveAt(Int32) Removes the at using the specified index. Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index The index. | Improve this Doc View Source ToString() Returns the string. Declaration public override string ToString() Returns Type Description String The string Overrides Object.ToString() Operators | Improve this Doc View Source Equality(LinkAddress<TLinkAddress>, LinkAddress<TLinkAddress>) Declaration public static bool operator ==(LinkAddress<TLinkAddress> left, LinkAddress<TLinkAddress> right) Parameters Type Name Description LinkAddress <TLinkAddress> left LinkAddress <TLinkAddress> right Returns Type Description Boolean | Improve this Doc View Source Implicit(TLinkAddress to LinkAddress<TLinkAddress>) Declaration public static implicit operator LinkAddress<TLinkAddress>(TLinkAddress linkAddress) Parameters Type Name Description TLinkAddress linkAddress Returns Type Description LinkAddress <TLinkAddress> | Improve this Doc View Source Implicit(LinkAddress<TLinkAddress> to TLinkAddress) Declaration public static implicit operator TLinkAddress(LinkAddress<TLinkAddress> linkAddress) Parameters Type Name Description LinkAddress <TLinkAddress> linkAddress Returns Type Description TLinkAddress | Improve this Doc View Source Inequality(LinkAddress<TLinkAddress>, LinkAddress<TLinkAddress>) Declaration public static bool operator !=(LinkAddress<TLinkAddress> left, LinkAddress<TLinkAddress> right) Parameters Type Name Description LinkAddress <TLinkAddress> left LinkAddress <TLinkAddress> right Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Gets the enumerator. Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator The enumerator Implements System.IEquatable<T> System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable See Also IList <T>"
  },
  "api/Platform.Data.LinksConstants-1.html": {
    "href": "api/Platform.Data.LinksConstants-1.html",
    "title": "Class LinksConstants<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinksConstants<TLinkAddress> Represents the links constants. Inheritance Object LinksConstantsBase LinksConstants<TLinkAddress> Inherited Members LinksConstantsBase.DefaultTargetPart Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public class LinksConstants<TLinkAddress> : LinksConstantsBase Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksConstants() Initializes a new instance. Declaration public LinksConstants() | Improve this Doc View Source LinksConstants(Range<TLinkAddress>) Initializes a new instance. Declaration public LinksConstants(Range<TLinkAddress> possibleInternalReferencesRange) Parameters Type Name Description Range <TLinkAddress> possibleInternalReferencesRange A possible internal references range. | Improve this Doc View Source LinksConstants(Range<TLinkAddress>, Nullable<Range<TLinkAddress>>) Initializes a new instance. Declaration public LinksConstants(Range<TLinkAddress> possibleInternalReferencesRange, Range<TLinkAddress>? possibleExternalReferencesRange) Parameters Type Name Description Range <TLinkAddress> possibleInternalReferencesRange A possible internal references range. Nullable < Range <TLinkAddress>> possibleExternalReferencesRange A possible external references range. | Improve this Doc View Source LinksConstants(Boolean) Initializes a new instance. Declaration public LinksConstants(bool enableExternalReferencesSupport) Parameters Type Name Description Boolean enableExternalReferencesSupport A enable external references support. | Improve this Doc View Source LinksConstants(Int32, Range<TLinkAddress>) Initializes a new instance. Declaration public LinksConstants(int targetPart, Range<TLinkAddress> possibleInternalReferencesRange) Parameters Type Name Description Int32 targetPart A target part. Range <TLinkAddress> possibleInternalReferencesRange A possible internal references range. | Improve this Doc View Source LinksConstants(Int32, Range<TLinkAddress>, Nullable<Range<TLinkAddress>>) Initializes a new instance. Declaration public LinksConstants(int targetPart, Range<TLinkAddress> possibleInternalReferencesRange, Range<TLinkAddress>? possibleExternalReferencesRange) Parameters Type Name Description Int32 targetPart A target part. Range <TLinkAddress> possibleInternalReferencesRange A possible internal references range. Nullable < Range <TLinkAddress>> possibleExternalReferencesRange A possible external references range. | Improve this Doc View Source LinksConstants(Int32, Boolean) Initializes a new instance. Declaration public LinksConstants(int targetPart, bool enableExternalReferencesSupport) Parameters Type Name Description Int32 targetPart A target part. Boolean enableExternalReferencesSupport A enable external references support. Properties | Improve this Doc View Source Any Возвращает значение, обозначающее любую связь. Declaration public TLinkAddress Any { get; } Property Value Type Description TLinkAddress Remarks Возможно нужно зарезервировать отдельное значение, тогда можно будет создавать все варианты последовательностей в функции Create. | Improve this Doc View Source Break Возвращает значение, обозначающее остановку прохода по связям. Declaration public TLinkAddress Break { get; } Property Value Type Description TLinkAddress Remarks Используется в функции обработчике, который передаётся в функцию Each. | Improve this Doc View Source Continue Возвращает значение, обозначающее продолжение прохода по связям. Declaration public TLinkAddress Continue { get; } Property Value Type Description TLinkAddress Remarks Используется в функции обработчике, который передаётся в функцию Each. | Improve this Doc View Source ExternalReferencesRange Возвращает диапазон возможных индексов для внешних связей (внешних ссылок). Declaration public Range<TLinkAddress>? ExternalReferencesRange { get; } Property Value Type Description Nullable < Range <TLinkAddress>> | Improve this Doc View Source IndexPart Возвращает индекс части, которая отвечает за индекс (адрес, идентификатор) самой связи. Declaration public int IndexPart { get; } Property Value Type Description Int32 | Improve this Doc View Source InternalReferencesRange Возвращает диапазон возможных индексов для внутренних связей (внутренних ссылок). Declaration public Range<TLinkAddress> InternalReferencesRange { get; } Property Value Type Description Range <TLinkAddress> | Improve this Doc View Source Itself Возвращает значение, обозначающее связь-ссылку на саму связь. Declaration public TLinkAddress Itself { get; } Property Value Type Description TLinkAddress | Improve this Doc View Source Null Возвращает значение, обозначающее отсутствие связи. Declaration public TLinkAddress Null { get; } Property Value Type Description TLinkAddress | Improve this Doc View Source Skip Возвращает значение, обозначающее пропуск в проходе по связям. Declaration public TLinkAddress Skip { get; } Property Value Type Description TLinkAddress | Improve this Doc View Source SourcePart Возвращает индекс части, которая отвечает за ссылку на связь-начало (первая часть-значение). Declaration public int SourcePart { get; } Property Value Type Description Int32 | Improve this Doc View Source TargetPart Возвращает индекс части, которая отвечает за ссылку на связь-конец (последняя часть-значение). Declaration public int TargetPart { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetDefaultExternalReferencesRange(Boolean) Gets the default external references range using the specified enable external references support. Declaration public static Range<TLinkAddress>? GetDefaultExternalReferencesRange(bool enableExternalReferencesSupport) Parameters Type Name Description Boolean enableExternalReferencesSupport The enable external references support. Returns Type Description Nullable < Range <TLinkAddress>> A range of t link address | Improve this Doc View Source GetDefaultInternalReferencesRange(Boolean) Gets the default internal references range using the specified enable external references support. Declaration public static Range<TLinkAddress> GetDefaultInternalReferencesRange(bool enableExternalReferencesSupport) Parameters Type Name Description Boolean enableExternalReferencesSupport The enable external references support. Returns Type Description Range <TLinkAddress> A range of t link address Extension Methods LinksConstantsExtensions.IsReference<TLinkAddress>(LinksConstants<TLinkAddress>, TLinkAddress) LinksConstantsExtensions.IsInternalReference<TLinkAddress>(LinksConstants<TLinkAddress>, TLinkAddress) LinksConstantsExtensions.IsExternalReference<TLinkAddress>(LinksConstants<TLinkAddress>, TLinkAddress) See Also LinksConstantsBase"
  },
  "api/Platform.Data.LinksConstantsBase.html": {
    "href": "api/Platform.Data.LinksConstantsBase.html",
    "title": "Class LinksConstantsBase | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinksConstantsBase Represents the links constants base. Inheritance Object LinksConstantsBase LinksConstants<TLinkAddress> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public abstract class LinksConstantsBase Fields | Improve this Doc View Source DefaultTargetPart The default target part. Declaration public static readonly int DefaultTargetPart Field Value Type Description Int32"
  },
  "api/Platform.Data.LinksConstantsExtensions.html": {
    "href": "api/Platform.Data.LinksConstantsExtensions.html",
    "title": "Class LinksConstantsExtensions | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinksConstantsExtensions Represents the links constants extensions. Inheritance Object LinksConstantsExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public static class LinksConstantsExtensions Methods | Improve this Doc View Source IsExternalReference<TLinkAddress>(LinksConstants<TLinkAddress>, TLinkAddress) Determines whether is external reference. Declaration public static bool IsExternalReference<TLinkAddress>(this LinksConstants<TLinkAddress> linksConstants, TLinkAddress address) Parameters Type Name Description LinksConstants <TLinkAddress> linksConstants The links constants. TLinkAddress address The address. Returns Type Description Boolean The bool Type Parameters Name Description TLinkAddress The link address. | Improve this Doc View Source IsInternalReference<TLinkAddress>(LinksConstants<TLinkAddress>, TLinkAddress) Determines whether is internal reference. Declaration public static bool IsInternalReference<TLinkAddress>(this LinksConstants<TLinkAddress> linksConstants, TLinkAddress address) Parameters Type Name Description LinksConstants <TLinkAddress> linksConstants The links constants. TLinkAddress address The address. Returns Type Description Boolean The bool Type Parameters Name Description TLinkAddress The link address. | Improve this Doc View Source IsReference<TLinkAddress>(LinksConstants<TLinkAddress>, TLinkAddress) Determines whether is reference. Declaration public static bool IsReference<TLinkAddress>(this LinksConstants<TLinkAddress> linksConstants, TLinkAddress address) Parameters Type Name Description LinksConstants <TLinkAddress> linksConstants The links constants. TLinkAddress address The address. Returns Type Description Boolean The bool Type Parameters Name Description TLinkAddress The link address."
  },
  "api/Platform.Data.Numbers.Raw.AddressToRawNumberConverter-1.html": {
    "href": "api/Platform.Data.Numbers.Raw.AddressToRawNumberConverter-1.html",
    "title": "Class AddressToRawNumberConverter<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Class AddressToRawNumberConverter<TLink> Represents the address to raw number converter. Inheritance Object AddressToRawNumberConverter<TLink> Namespace : Platform.Data.Numbers.Raw Assembly : Platform.Data.dll Syntax public class AddressToRawNumberConverter<TLink> : IConverter<TLink> Type Parameters Name Description TLink Methods | Improve this Doc View Source Convert(TLink) Converts the source. Declaration public TLink Convert(TLink source) Parameters Type Name Description TLink source The source. Returns Type Description TLink The link"
  },
  "api/Platform.Data.Numbers.Raw.html": {
    "href": "api/Platform.Data.Numbers.Raw.html",
    "title": "Namespace Platform.Data.Numbers.Raw | LinksPlatform's Platform.Data Library",
    "keywords": "Namespace Platform.Data.Numbers.Raw Classes AddressToRawNumberConverter<TLink> Represents the address to raw number converter. RawNumberToAddressConverter<TLink> Represents the raw number to address converter."
  },
  "api/Platform.Data.Numbers.Raw.RawNumberToAddressConverter-1.html": {
    "href": "api/Platform.Data.Numbers.Raw.RawNumberToAddressConverter-1.html",
    "title": "Class RawNumberToAddressConverter<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Class RawNumberToAddressConverter<TLink> Represents the raw number to address converter. Inheritance Object RawNumberToAddressConverter<TLink> Namespace : Platform.Data.Numbers.Raw Assembly : Platform.Data.dll Syntax public class RawNumberToAddressConverter<TLink> : IConverter<TLink> Type Parameters Name Description TLink Methods | Improve this Doc View Source Convert(TLink) Converts the source. Declaration public TLink Convert(TLink source) Parameters Type Name Description TLink source The source. Returns Type Description TLink The link"
  },
  "api/Platform.Data.Point-1.html": {
    "href": "api/Platform.Data.Point-1.html",
    "title": "Class Point<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Class Point<TLinkAddress> Represents the point. Inheritance Object Point<TLinkAddress> Implements IEquatable < LinkAddress <TLinkAddress>> IList <TLinkAddress> ICollection <TLinkAddress> IEnumerable <TLinkAddress> IEnumerable Inherited Members Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public class Point<TLinkAddress> : IEquatable<LinkAddress<TLinkAddress>>, IList<TLinkAddress>, ICollection<TLinkAddress>, IEnumerable<TLinkAddress>, IEnumerable Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source Point(TLinkAddress, Int32) Initializes a new instance. Declaration public Point(TLinkAddress index, int size) Parameters Type Name Description TLinkAddress index A index. Int32 size A size. Properties | Improve this Doc View Source Count Gets the count value. Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Index Gets the index value. Declaration public TLinkAddress Index { get; } Property Value Type Description TLinkAddress | Improve this Doc View Source IsReadOnly Gets the is read only value. Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] The not supported exception. Declaration public TLinkAddress this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description TLinkAddress | Improve this Doc View Source Size Gets the size value. Declaration public int Size { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(TLinkAddress) Adds the item. Declaration public void Add(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. | Improve this Doc View Source Clear() Clears this instance. Declaration public void Clear() | Improve this Doc View Source Contains(TLinkAddress) Determines whether this instance contains. Declaration public virtual bool Contains(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. Returns Type Description Boolean The bool | Improve this Doc View Source CopyTo(TLinkAddress[], Int32) Copies the to using the specified array. Declaration public void CopyTo(TLinkAddress[] array, int arrayIndex) Parameters Type Name Description TLinkAddress[] array The array. Int32 arrayIndex The array index. | Improve this Doc View Source Equals(LinkAddress<TLinkAddress>) Determines whether this instance equals. Declaration public virtual bool Equals(LinkAddress<TLinkAddress> other) Parameters Type Name Description LinkAddress <TLinkAddress> other The other. Returns Type Description Boolean The bool | Improve this Doc View Source Equals(Object) Determines whether this instance equals. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description Boolean The bool Overrides Object.Equals(Object) | Improve this Doc View Source GetEnumerator() Gets the enumerator. Declaration public IEnumerator<TLinkAddress> GetEnumerator() Returns Type Description IEnumerator <TLinkAddress> An enumerator of t link address | Improve this Doc View Source GetHashCode() Gets the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The int Overrides Object.GetHashCode() | Improve this Doc View Source IndexOf(TLinkAddress) Indexes the of using the specified item. Declaration public virtual int IndexOf(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. Returns Type Description Int32 The int | Improve this Doc View Source Insert(Int32, TLinkAddress) Inserts the index. Declaration public void Insert(int index, TLinkAddress item) Parameters Type Name Description Int32 index The index. TLinkAddress item The item. | Improve this Doc View Source IsFullPoint(TLinkAddress[]) Determines whether is full point. Declaration public static bool IsFullPoint(params TLinkAddress[] link) Parameters Type Name Description TLinkAddress[] link The link. Returns Type Description Boolean The bool | Improve this Doc View Source IsFullPoint(IList<TLinkAddress>) Determines whether is full point. Declaration public static bool IsFullPoint(IList<TLinkAddress> link) Parameters Type Name Description IList <TLinkAddress> link The link. Returns Type Description Boolean The bool | Improve this Doc View Source IsFullPointUnchecked(IList<TLinkAddress>) Determines whether is full point unchecked. Declaration public static bool IsFullPointUnchecked(IList<TLinkAddress> link) Parameters Type Name Description IList <TLinkAddress> link The link. Returns Type Description Boolean The result. | Improve this Doc View Source IsPartialPoint(TLinkAddress[]) Determines whether is partial point. Declaration public static bool IsPartialPoint(params TLinkAddress[] link) Parameters Type Name Description TLinkAddress[] link The link. Returns Type Description Boolean The bool | Improve this Doc View Source IsPartialPoint(IList<TLinkAddress>) Determines whether is partial point. Declaration public static bool IsPartialPoint(IList<TLinkAddress> link) Parameters Type Name Description IList <TLinkAddress> link The link. Returns Type Description Boolean The bool | Improve this Doc View Source IsPartialPointUnchecked(IList<TLinkAddress>) Determines whether is partial point unchecked. Declaration public static bool IsPartialPointUnchecked(IList<TLinkAddress> link) Parameters Type Name Description IList <TLinkAddress> link The link. Returns Type Description Boolean The result. | Improve this Doc View Source Remove(TLinkAddress) Determines whether this instance remove. Declaration public bool Remove(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. Returns Type Description Boolean The bool | Improve this Doc View Source RemoveAt(Int32) Removes the at using the specified index. Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index The index. | Improve this Doc View Source ToString() Returns the string. Declaration public override string ToString() Returns Type Description String The string Overrides Object.ToString() Operators | Improve this Doc View Source Equality(Point<TLinkAddress>, Point<TLinkAddress>) Declaration public static bool operator ==(Point<TLinkAddress> left, Point<TLinkAddress> right) Parameters Type Name Description Point <TLinkAddress> left Point <TLinkAddress> right Returns Type Description Boolean | Improve this Doc View Source Implicit(Point<TLinkAddress> to TLinkAddress) Declaration public static implicit operator TLinkAddress(Point<TLinkAddress> linkAddress) Parameters Type Name Description Point <TLinkAddress> linkAddress Returns Type Description TLinkAddress | Improve this Doc View Source Inequality(Point<TLinkAddress>, Point<TLinkAddress>) Declaration public static bool operator !=(Point<TLinkAddress> left, Point<TLinkAddress> right) Parameters Type Name Description Point <TLinkAddress> left Point <TLinkAddress> right Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Gets the enumerator. Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator The enumerator Implements System.IEquatable<T> System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable See Also IList <T>"
  },
  "api/Platform.Data.Universal.html": {
    "href": "api/Platform.Data.Universal.html",
    "title": "Namespace Platform.Data.Universal | LinksPlatform's Platform.Data Library",
    "keywords": "Namespace Platform.Data.Universal Interfaces IUniLinks<TLinkAddress> IUniLinksCRUD<TLinkAddress> IUniLinksGS<TLinkAddress> IUniLinksIO<TLinkAddress> IUniLinksIOWithExtensions<TLinkAddress> IUniLinksRW<TLinkAddress>"
  },
  "api/Platform.Data.Universal.IUniLinks-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinks-1.html",
    "title": "Interface IUniLinks<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinks<TLinkAddress> Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinks<TLinkAddress> Type Parameters Name Description TLinkAddress Remarks Minimal sufficient universal Links API (for bulk operations). Methods | Improve this Doc View Source Count(IList<TLinkAddress>) Declaration TLinkAddress Count(IList<TLinkAddress> restrictions) Parameters Type Name Description IList <TLinkAddress> restrictions Returns Type Description TLinkAddress Remarks Something simple should be simple and optimized. | Improve this Doc View Source Trigger(IList<TLinkAddress>, IList<TLinkAddress>) Triggers the condition. Declaration IList<IList<IList<TLinkAddress>>> Trigger(IList<TLinkAddress> condition, IList<TLinkAddress> substitution) Parameters Type Name Description IList <TLinkAddress> condition The condition. IList <TLinkAddress> substitution The substitution. Returns Type Description IList < IList < IList <TLinkAddress>>> A list of i list i list t link address | Improve this Doc View Source Trigger(IList<TLinkAddress>, Func<IList<TLinkAddress>, TLinkAddress>, IList<TLinkAddress>, Func<IList<TLinkAddress>, IList<TLinkAddress>, TLinkAddress>) Declaration TLinkAddress Trigger(IList<TLinkAddress> patternOrCondition, Func<IList<TLinkAddress>, TLinkAddress> matchHandler, IList<TLinkAddress> substitution, Func<IList<TLinkAddress>, IList<TLinkAddress>, TLinkAddress> substitutionHandler) Parameters Type Name Description IList <TLinkAddress> patternOrCondition Func < IList <TLinkAddress>, TLinkAddress> matchHandler IList <TLinkAddress> substitution Func < IList <TLinkAddress>, IList <TLinkAddress>, TLinkAddress> substitutionHandler Returns Type Description TLinkAddress TLinkAddress that represents True (was finished fully) or TLinkAddress that represents False (was stopped). This is done to assure ability to push up stop signal through recursion stack. Remarks { 0, 0, 0 } => { itself, itself, itself } // create { 1, any, any } => { itself, any, 3 } // update { 3, any, any } => { 0, 0, 0 } // delete | Improve this Doc View Source Trigger(IList<TLinkAddress>, Func<IList<TLinkAddress>, IList<TLinkAddress>, TLinkAddress>, IList<TLinkAddress>, Func<IList<TLinkAddress>, IList<TLinkAddress>, TLinkAddress>) Triggers the restriction. Declaration TLinkAddress Trigger(IList<TLinkAddress> restriction, Func<IList<TLinkAddress>, IList<TLinkAddress>, TLinkAddress> matchedHandler, IList<TLinkAddress> substitution, Func<IList<TLinkAddress>, IList<TLinkAddress>, TLinkAddress> substitutedHandler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Func < IList <TLinkAddress>, IList <TLinkAddress>, TLinkAddress> matchedHandler The matched handler. IList <TLinkAddress> substitution The substitution. Func < IList <TLinkAddress>, IList <TLinkAddress>, TLinkAddress> substitutedHandler The substituted handler. Returns Type Description TLinkAddress The link address"
  },
  "api/Platform.Data.Universal.IUniLinksCRUD-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinksCRUD-1.html",
    "title": "Interface IUniLinksCRUD<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinksCRUD<TLinkAddress> Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinksCRUD<TLinkAddress> Type Parameters Name Description TLinkAddress Remarks CRUD aliases for IUniLinks. Methods | Improve this Doc View Source Create(IList<TLinkAddress>) Creates the parts. Declaration TLinkAddress Create(IList<TLinkAddress> parts) Parameters Type Name Description IList <TLinkAddress> parts The parts. Returns Type Description TLinkAddress The link address | Improve this Doc View Source Delete(IList<TLinkAddress>) Deletes the parts. Declaration void Delete(IList<TLinkAddress> parts) Parameters Type Name Description IList <TLinkAddress> parts The parts. | Improve this Doc View Source Read(Func<TLinkAddress, Boolean>, IList<TLinkAddress>) Reads the handler. Declaration TLinkAddress Read(Func<TLinkAddress, bool> handler, IList<TLinkAddress> pattern) Parameters Type Name Description Func <TLinkAddress, Boolean > handler The handler. IList <TLinkAddress> pattern The pattern. Returns Type Description TLinkAddress The link address | Improve this Doc View Source Read(Int32, TLinkAddress) Reads the part type. Declaration TLinkAddress Read(int partType, TLinkAddress link) Parameters Type Name Description Int32 partType The part type. TLinkAddress link The link. Returns Type Description TLinkAddress The link address | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>) Updates the before. Declaration TLinkAddress Update(IList<TLinkAddress> before, IList<TLinkAddress> after) Parameters Type Name Description IList <TLinkAddress> before The before. IList <TLinkAddress> after The after. Returns Type Description TLinkAddress The link address"
  },
  "api/Platform.Data.Universal.IUniLinksGS-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinksGS-1.html",
    "title": "Interface IUniLinksGS<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinksGS<TLinkAddress> Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinksGS<TLinkAddress> Type Parameters Name Description TLinkAddress Remarks Get/Set aliases for IUniLinks. Methods | Improve this Doc View Source Get(Func<TLinkAddress, Boolean>, IList<TLinkAddress>) Gets the handler. Declaration TLinkAddress Get(Func<TLinkAddress, bool> handler, IList<TLinkAddress> pattern) Parameters Type Name Description Func <TLinkAddress, Boolean > handler The handler. IList <TLinkAddress> pattern The pattern. Returns Type Description TLinkAddress The link address | Improve this Doc View Source Get(Int32, TLinkAddress) Gets the part type. Declaration TLinkAddress Get(int partType, TLinkAddress link) Parameters Type Name Description Int32 partType The part type. TLinkAddress link The link. Returns Type Description TLinkAddress The link address | Improve this Doc View Source Set(IList<TLinkAddress>, IList<TLinkAddress>) Sets the before. Declaration TLinkAddress Set(IList<TLinkAddress> before, IList<TLinkAddress> after) Parameters Type Name Description IList <TLinkAddress> before The before. IList <TLinkAddress> after The after. Returns Type Description TLinkAddress The link address"
  },
  "api/Platform.Data.Universal.IUniLinksIO-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinksIO-1.html",
    "title": "Interface IUniLinksIO<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinksIO<TLinkAddress> Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinksIO<TLinkAddress> Type Parameters Name Description TLinkAddress Remarks In/Out aliases for IUniLinks. TLinkAddress can be any number type of any size. Methods | Improve this Doc View Source In(IList<TLinkAddress>, IList<TLinkAddress>) Declaration TLinkAddress In(IList<TLinkAddress> before, IList<TLinkAddress> after) Parameters Type Name Description IList <TLinkAddress> before IList <TLinkAddress> after Returns Type Description TLinkAddress Remarks default(TLinkAddress) means itself. Equivalent to: creation if before == null deletion if after == null update if before != null && after != null default(TLinkAddress) if before == null && after == null Possible interpretation In(null, new[] { }) creates point (link that points to itself using minimum number of parts). In(new[] { 4 }, null) deletes 4th link. In(new[] { 4 }, new [] { 5 }) delete 5th link if it exists and moves 4th link to 5th index. In(new[] { 4 }, new [] { 0, 2, 3 }) replaces 4th link with new doublet link (with 2 as source and 3 as target), 0 means it can be placed in any address. ... | Improve this Doc View Source Out(Func<IList<TLinkAddress>, Boolean>, IList<TLinkAddress>) Declaration bool Out(Func<IList<TLinkAddress>, bool> handler, IList<TLinkAddress> pattern) Parameters Type Name Description Func < IList <TLinkAddress>, Boolean > handler IList <TLinkAddress> pattern Returns Type Description Boolean Remarks default(TLinkAddress) means any link. Single element pattern means just element (link). Handler gets array of link contents. link[0] is index or identifier. link[1] is source or first. link[2] is target or second. link[3] is linker or third. link[n] is nth part/parent/element/value of link (if variable length links used). Stops and returns false if handler return false. Acts as Each, Foreach, Select, Search, Match & ... Handles all links in store if pattern/restrictions is not defined."
  },
  "api/Platform.Data.Universal.IUniLinksIOWithExtensions-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinksIOWithExtensions-1.html",
    "title": "Interface IUniLinksIOWithExtensions<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinksIOWithExtensions<TLinkAddress> Inherited Members IUniLinksIO<TLinkAddress>.Out(Func<IList<TLinkAddress>, Boolean>, IList<TLinkAddress>) IUniLinksIO<TLinkAddress>.In(IList<TLinkAddress>, IList<TLinkAddress>) Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinksIOWithExtensions<TLinkAddress> : IUniLinksIO<TLinkAddress> Type Parameters Name Description TLinkAddress Remarks Contains some optimizations of Out. Methods | Improve this Doc View Source OutAll(IList<TLinkAddress>) Declaration IList<IList<TLinkAddress>> OutAll(IList<TLinkAddress> pattern) Parameters Type Name Description IList <TLinkAddress> pattern Returns Type Description IList < IList <TLinkAddress>> Remarks OutCount() returns total links in store as array. | Improve this Doc View Source OutCount(IList<TLinkAddress>) Declaration ulong OutCount(IList<TLinkAddress> pattern) Parameters Type Name Description IList <TLinkAddress> pattern Returns Type Description UInt64 Remarks OutCount() returns total amount of links in store. | Improve this Doc View Source OutOne(Int32, IList<TLinkAddress>) Declaration TLinkAddress OutOne(int partType, IList<TLinkAddress> pattern) Parameters Type Name Description Int32 partType IList <TLinkAddress> pattern Returns Type Description TLinkAddress Remarks default(TLinkAddress) means nothing or null. Single element pattern means just element (link). OutPart(n, null) returns default(TLinkAddress). OutPart(0, pattern) ~ Exists(link) or Search(pattern) OutPart(1, pattern) ~ GetSource(link) or GetSource(Search(pattern)) OutPart(2, pattern) ~ GetTarget(link) or GetTarget(Search(pattern)) OutPart(3, pattern) ~ GeTLinkAddresser(link) or GeTLinkAddresser(Search(pattern)) OutPart(n, pattern) => For any variable length links, returns link or default(TLinkAddress). Outs(returns) inner contents of link, its part/parent/element/value."
  },
  "api/Platform.Data.Universal.IUniLinksRW-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinksRW-1.html",
    "title": "Interface IUniLinksRW<TLinkAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinksRW<TLinkAddress> Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinksRW<TLinkAddress> Type Parameters Name Description TLinkAddress Remarks Read/Write aliases for IUniLinks. Methods | Improve this Doc View Source Read(Func<TLinkAddress, Boolean>, IList<TLinkAddress>) Determines whether this instance read. Declaration bool Read(Func<TLinkAddress, bool> handler, IList<TLinkAddress> pattern) Parameters Type Name Description Func <TLinkAddress, Boolean > handler The handler. IList <TLinkAddress> pattern The pattern. Returns Type Description Boolean The bool | Improve this Doc View Source Read(Int32, TLinkAddress) Reads the part type. Declaration TLinkAddress Read(int partType, TLinkAddress link) Parameters Type Name Description Int32 partType The part type. TLinkAddress link The link. Returns Type Description TLinkAddress The link address | Improve this Doc View Source Write(IList<TLinkAddress>, IList<TLinkAddress>) Writes the before. Declaration TLinkAddress Write(IList<TLinkAddress> before, IList<TLinkAddress> after) Parameters Type Name Description IList <TLinkAddress> before The before. IList <TLinkAddress> after The after. Returns Type Description TLinkAddress The link address"
  },
  "README.html": {
    "href": "README.html",
    "title": "Data | LinksPlatform's Platform.Data Library",
    "keywords": "Data LinksPlatform's Platform.Data Class Library. Namespace: Platform.Data Forked from: Konard/LinksPlatform/Platform/Platform.Data NuGet package: Platform.Data Documentation Interface ILinks<TLinkAddress, TConstants> . PDF file with code for e-readers. Depend on Platform.Threading Platform.Numbers Platform.Setters Dependent libraries Platform.Data.Doublets Platform.Data.Triplets"
  }
}